[

%%
%% rest api
{restd, [
   {default, [
      {port,  "http://*:8080"},
      {pool, 10},
      {route, [
         %% 
         %% authorization grant 
         {"/oauth2/authorize",   oauth2_restapi_auth}

         %%
         %% token endpoint: issue and validate
        ,{"/oauth2/token",       oauth2_restapi_token}
        ,{"/oauth2/introspect",  oauth2_restapi_introspect}

         %%
         %% application registration
        ,{"/oauth2/client",      oauth2_restapi_client}
        ,{"/oauth2/client/:id",  oauth2_restapi_client}
        ,{"/oauth2/account",     oauth2_restapi_account}

         %% 
         %% static resources
        ,{"/authorize",          restd_api_webapp, [{htdoc, oauth2}, {path, widget}, {file, <<"signin.html">>}]}
        ,{"/css/:file",          restd_api_webapp, [{htdoc, oauth2}, {path, css}]}
        ,{"/js/:file",           restd_api_webapp, [{htdoc, oauth2}, {path, js}]}
        ,{"/widget/:file",       restd_api_webapp, [{htdoc, oauth2}, {path, widget}]}
      ]}
   ]}
]},

%%
%%
{permit, [
   %%
   %% RFC 7519  
   %%   4.1.1.  "iss" (Issuer) Claim
   {issuer, "http://localhost:8080"}

   %%
   %% secret key to sign the token
   %% (consider usage of aws kms or cdrt with cluster distribution)
  ,{secret, "xxxx-xxxx-xxxx-xxxx"}

   %%
   %% default list of roles 
  ,{roles,  "uid"}
]},

%%
%%
{oauth2, [
   %%
   %% oauth2 backing service to store oauth2 claims
   {storage, "ephemeral://"}
]}

].